{"version":3,"sources":["components/CardBody.js","components/Counter.js","App.js","index.js"],"names":["CardBody","product","subscriber","toggle","change","style","text","className","onClick","socketurl","url","toggleurl","location","hostname","socket","W3CWebSocket","Counter","useState","setProduct","setSubscriber","setToggle","useEffect","fetch","then","response","json","data","console","log","state","catch","err","error","onopen","onmessage","message","JSON","parse","type","App","ReactDOM","render","document","getElementById"],"mappings":"2IAqBeA,EAnBE,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAExCC,EAAO,kBACPC,EAAO,QAKb,OAJMH,IACAE,EAAQ,iBACRC,EAAO,QAGX,sBAAKC,UAAU,YAAf,UACE,oBAAGA,UAAU,YAAb,4BAAyCN,KACzC,oBAAGM,UAAU,YAAb,+BAA4CL,KAC5C,wBAAQK,UAAWF,EAAOG,QAASJ,EAAnC,SACGE,IACO,Q,OCZZG,EAAY,GACZC,EAAM,GACNC,EAAY,GAES,aAArBC,SAASC,UACTH,EAAG,iBAAa,iBAAmB,gBACnCC,EAAS,iBAAa,iBAAmB,eACzCF,EAAS,eAAW,oBAEpBC,EAAM,4CACNC,EAAY,2CACZF,EAAS,+BAGb,IAAMK,EAAS,IAAIC,eAAaN,GA+DjBO,EA7DC,WACd,MAA8BC,mBAAS,GAAvC,mBAAOhB,EAAP,KAAgBiB,EAAhB,KACA,EAAoCD,mBAAS,GAA7C,mBAAOf,EAAP,KAAmBiB,EAAnB,KACA,EAA4BF,oBAAS,GAArC,mBAAOd,EAAP,KAAeiB,EAAf,KAGAC,qBAAU,WACRC,MAAMX,GACDY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACVN,EAAUM,EAAKG,UAElBC,OAAM,SAAAC,GAAG,OAAIJ,QAAQK,MAAMD,QAC/B,IAEHV,qBAAU,WACRP,EAAOmB,OAAS,WACdN,QAAQC,IAAI,+BAEdd,EAAOoB,UAAY,SAACC,GAClB,IAAIT,EAAOU,KAAKC,MAAMF,EAAQT,MAGV,OAAhBA,EAAK,GAAGY,MAEXpB,EAAWjB,EAAU,GAGF,cAAhByB,EAAK,GAAGY,MAEVnB,EAAcjB,EAAa,GAGT,UAAhBwB,EAAK,GAAGY,MAEVlB,EAAUM,EAAK,GAAGG,WAQtB,OACE,sBAAKtB,UAAU,mBAAf,UACE,sBAAKA,UAAU,oCAAf,UACG,uDACA,6DAEH,cAAC,EAAD,CACKN,QAASA,EACTC,WAAYA,EACZE,OAZI,WACbkB,MAAMZ,IAYGP,OAAQA,QCnENoC,MAJf,WACE,OAAO,cAAC,EAAD,K,MCCTC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.900cc752.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CardBody = ({product, subscriber, toggle, change}) => {\r\n    //const {product, subscriber} = props\r\n    let style= \"btn btn-primary\"\r\n    let text = \"START\"\r\n    if (toggle) {\r\n        style = \"btn btn-danger\"\r\n        text = \"STOP\"\r\n    }\r\n  return (\r\n    <div className=\"card-body\">\r\n      <p className=\"card-text\">Product Count: {product}</p>\r\n      <p className=\"card-text\">Subscriber Count: {subscriber}</p>\r\n      <button className={style} onClick={change}>\r\n        {text}\r\n      </button>{\" \"}      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardBody;","import React, {useState, useEffect} from \"react\";\r\nimport CardBody from \"./CardBody\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\nlet socketurl = ''\r\nlet url = ''\r\nlet toggleurl = ''\r\n\r\nif (location.hostname == 'localhost' ) {\r\n    url = `http://${'localhost:5000'}${'/api/signals'}`\r\n    toggleurl = `http://${'localhost:5000'}${'/api/toggle'}`\r\n    socketurl = `ws://${'localhost:5000'}`\r\n} else {\r\n    url = 'https://msskafka.onrender.com/api/signals'\r\n    toggleurl = 'https://msskafka.onrender.com/api/toggle'\r\n    socketurl = `wss://msskafka.onrender.com`\r\n}\r\n\r\nconst socket = new W3CWebSocket(socketurl);\r\n\r\nconst Counter = () => {\r\n  const [product, setProduct] = useState(0)\r\n  const [subscriber, setSubscriber] = useState(0)\r\n  const [toggle, setToggle] = useState(false)\r\n\r\n  // on component load set the button state based on server state\r\n  useEffect(() => {\r\n    fetch(toggleurl)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data)\r\n            setToggle(data.state)\r\n        })\r\n        .catch(err => console.error(err))\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.onopen = () => {\r\n      console.log('WebSocket Client Connected');\r\n    };\r\n    socket.onmessage = (message) => { \r\n      let data = JSON.parse(message.data)\r\n      \r\n      // product sales state\r\n      if (data[0].type == 'tag') {\r\n        // increment product\r\n       setProduct(product + 1)\r\n      }\r\n      // subscriber state\r\n      if (data[0].type == 'subscriber') { \r\n          // increment subscriber\r\n        setSubscriber(subscriber + 1)\r\n      }  \r\n       // button state\r\n      if (data[0].type == 'status') { \r\n        // toggle button\r\n        setToggle(data[0].state)\r\n     }    \r\n       \r\n    }\r\n  })\r\n  const change = () => {   \r\n    fetch(url)        \r\n}\r\n    return (\r\n      <div className=\"card text-center\">\r\n        <div className=\"card-header bg-primary text-white\">\r\n           <h3>MSS International Lab</h3>\r\n           <h4>Kafka Streaming Platform</h4>\r\n        </div>\r\n        <CardBody\r\n             product={product}\r\n             subscriber={subscriber}\r\n             change={change}\r\n             toggle={toggle}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Counter;","import React from \"react\";\r\nimport Counter from \"./components/Counter\";\r\n\r\nfunction App() {\r\n  return <Counter />;\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}